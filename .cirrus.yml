# global default
container:
  image: continuumio/miniconda3
  cpu: 1

makeenv_task:
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script: 
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - conda create -yq --prefix  $PWD/conda-env python=$PYTHON
      - source activate $PWD/conda-env
      - pip install -e '.[test,doc]'
  activate_script: source activate $PWD/conda-env

Unittest_task:
  depends_on: 
    - makeenv
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
    CODECOV_TOKEN: eb5758aa-6d0c-4981-a22a-16c663e2aaa9
  environment_cache:
    folder: conda-env
    fingerprint_script: 
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Running_unit_tests_script:
    - apt-get install -y make curl
    - source activate $PWD/conda-env
    - make unittest
    - bash <(curl -s https://codecov.io/bash)

Integration_task:
  depends_on: 
    - makeenv
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
    CODECOV_TOKEN: eb5758aa-6d0c-4981-a22a-16c663e2aaa9
  environment_cache:
    folder: conda-env
    fingerprint_script: 
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Running_integration_tests_script:
    - apt-get install -y make curl tree tar
    - source activate $PWD/conda-env
    - PATH=/home/test_user/.local/bin:$PATH
    - make integration
    - bash <(curl -s https://codecov.io/bash)
    - tar -zcvf integration_${PYTHON}.tar.gz /tmp/pytest-of-root/pytest-0
  integration_artifacts:
    path: "integration_${PYTHON}.tar.gz"

Style_check_task:
  depends_on:
  - makeenv
  env:
    PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script:
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Lintin_script:
  - apt-get install -y make
  - source activate $PWD/conda-env
  - make lint

Build_docs_task:
  depends_on:
  - makeenv
  env:
    PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script:
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Build_documentation_script:
  - apt-get install -y make tar
  - source activate $PWD/conda-env
  - make -C docs html
  docs_artifacts:
    path: "docs/_build/html/**.html"
    type: text/html

Bids_validate_task:
  depends_on:
  - makeenv
  env:
    PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script:
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Generate_enviroment_script:
  - apt-get install -yqq wget curl tree
  - curl -sL https://deb.nodesource.com/setup_15.x | bash -
  - apt-get install -yqq nodejs
  - npm install -g bids-validator
  Dowload data and execute pipeline_script:
  - wget -O Test1_multifreq_onescan.txt https://osf.io/7se4t/download
  - wget -O heur_test_multifreq.py https://osf.io/ehx6j/download
  - source activate $PWD/conda-env
  - PATH=/home/test_user/.local/bin:$PATH
  - pip install -e '.[test,doc]' && phys2bids -in Test1_multifreq_onescan.txt -chtrig 1 -ntp 30 -tr 1.2 -outdir physio_bids -heur heur_test_multifreq.py -sub 006 -ses 01
  Run validator_script:
    - wget -O sub-006_ses-01_task-test_rec-biopac_run-01_bold.json https://osf.io/6j8f7/download
    - wget -O sub-006_ses-01_task-test_rec-biopac_run-01_bold.nii.gz https://osf.io/wus2p/download
    - mv sub-006_ses-01_task-test_rec-biopac_run-01_bold* physio_bids/sub-006/ses-01/func
    - tree physio_bids
    - bids-validator  physio_bids

Integration_windows_task:
  windows_container:
    dockerfile: .ci/w_miniconda
    cpu: 1
  env:
    matrix:
      PYTHON: 3.9
      PYTHON: 3.8
      PYTHON: 3.7
      PYTHON: 3.6
  populate_script:
    - conda create -yq --prefix  C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env python=%PYTHON%
    - activate C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env
    - pip install -e .[test,doc]
  Running_integration_script:
    - choco install make -y --no-progress
    - activate C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env
    - pip install msvc-runtime
    - make integration

Unittest_windows_task:
  windows_container:
    dockerfile: .ci/w_miniconda
    cpu: 1
  env:
    matrix:
      PYTHON: 3.9
      PYTHON: 3.8
      PYTHON: 3.7
      PYTHON: 3.6
  populate_script:
    - conda create -yq --prefix  C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env python=%PYTHON%
    - activate C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env
    - pip install -e .[test,doc]
  Running_unittest_script:
    - choco install make -y --no-progress
    -  activate C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\conda-env
    - make unittest

